plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Minecraft & Mappings
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric & Fabric API
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // Cloth Config (including Auto Config)
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Mod Menu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modCompileOnly "com.github.Fourmisain:fabric-seasons:jitpack-SNAPSHOT"
}

processResources {
    // expand all properties from gradle.properties
    def stringProperties = providers.gradlePropertiesPrefixedBy('').get()
    stringProperties.each { inputs.property(it.key, it.value) }

    ['fabric.mod.json', "${project.mod_id}.mixins.json"].each {
        filesMatching(it) {
            expand(stringProperties) {
                escapeBackslash = true
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.compilerArgs.add('-Xlint:deprecation')
    it.options.release = project.java_version as Integer
}

java {
    targetCompatibility = sourceCompatibility = project.java_version as Integer
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.mod_id}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
